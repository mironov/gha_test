name: On Release Pull Request Merge

on:
  pull_request:
    types: [closed]

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  determine_app_version:
    name: Determine app version
    if: startsWith(github.head_ref, 'release') && github.event.pull_request.merged
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.determine_app_version.outputs.app_version }}
      level: ${{ steps.parse_level_and_urgency.outputs.level }}
      urgency: ${{ steps.parse_level_and_urgency.outputs.urgency }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install semver js-yaml @actions/core @actions/github
      - name: Parse level and urgency
        id: parse_level_and_urgency
        run: ./.github/workflows/scripts/parse_pull_request_level_and_urgency.mjs
      - name: Determine app version
        id: determine_app_version
        run: |
          ./.github/workflows/scripts/determine_app_version.mjs \
            --level ${{ steps.parse_level_and_urgency.outputs.level }} \
            --release
  commit_version_file:
    name: Commit version file
    needs: determine_app_version
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.commit_version_file.outputs.commit_sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Commit version file
        id: commit_version_file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          ruby -r yaml -r "./lib/app_version_v2.rb" -e "AppVersionV2.increment!(urgency: :${{ needs.determine_app_version.outputs.urgency }}, level: :${{ needs.determine_app_version.outputs.level }})"
          grep ":current: ${{ needs.determine_app_version.outputs.app_version }}" version.yaml || exit 1
          git add version.yaml
          git commit -m "Bump version to v${{ needs.determine_app_version.outputs.app_version }}"
          git tag -a v${{ needs.determine_app_version.outputs.app_version }} -m "Release v${{ needs.determine_app_version.outputs.app_version }}"
          git push --follow-tags
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
  create_release:
    name: Create a release
    needs: [determine_app_version, commit_version_file]
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        id: publish_release
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ needs.determine_app_version.outputs.app_version }}',
              name: 'Release v${{ needs.determine_app_version.outputs.app_version }}',
              generate_release_notes: true,
              draft: false,
              prerelease: false,
            });
  build_and_push_image:
    name: Image
    needs: [determine_app_version, commit_version_file]
    uses: ./.github/workflows/build-and-push-docker-image.yml
    secrets: inherit
    with:
      app_version: v${{ needs.determine_app_version.outputs.app_version }}
      commit_sha: ${{ needs.commit_version_file.outputs.commit_sha }}
      base_sha: ${{ github.event.pull_request.base.sha }}
      cache_tag: pr-${{ github.event.pull_request.number }}
      target: release
      push_to_production: true
  generate_summary:
    name: Generate summary
    needs: [determine_app_version, build_and_push_image, create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Generate summary
        run: |
          echo "Release [v${{ needs.determine_app_version.outputs.app_version }}](https://github.com/${{ github.repository }}/releases/v${{ needs.determine_app_version.outputs.app_version }}) has been created ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "Image tagged **v${{ needs.determine_app_version.outputs.app_version }}** has been built and pushed to the registry." >> $GITHUB_STEP_SUMMARY

name: On Release Pull Request Update

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  packages: write

jobs:
  determine_app_version:
    name: Determine app version
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.determine_app_version.outputs.app_version }}
      previous_app_version: ${{ steps.determine_app_version.outputs.previous_app_version }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install semver
      - name: Determine app version
        id: determine_app_version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          retries: 3
          script: |
            const semver = require('semver');
            
            const { data: latestRelease } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestVersion = semver.clean(latestRelease.tag_name);
            console.log('Latest release: ', latestVersion);
            
            const short_sha = '${{ github.sha }}'.substring(0, 11);
          
            let nextVersion = semver.inc(latestVersion, '${{ github.event.inputs.level }}');
            nextVersion += `-rc-${short_sha}`;
            
            console.log('Next RC version: ', nextVersion);
            
            core.setOutput('previous_app_version', latestVersion)
            core.setOutput('app_version', nextVersion)
  build_and_push_image:
    name: Image
    needs: determine_app_version
    uses: ./.github/workflows/build-and-push-docker-image.yml
    secrets: inherit
    concurrency:
      group: ${{ github.event.pull_request.head.ref }} # A single build running per branch
      cancel-in-progress: true
    with:
      app_version: ${{ needs.determine_app_version.outputs.app_version }}
      commit_sha: ${{ github.event.pull_request.head.sha }}
      cache_tag: pr-${{ github.event.pull_request.number }}
      push_to_production: true
      stage: rc

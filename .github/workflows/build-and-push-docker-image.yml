name: Build and Push Docker image

env:
  SENTRY_ORG: "jane-app"
  SENTRY_FE_PROJECT: "jane-frontend"
  SENTRY_BE_PROJECT: "jane-backend"

on:
  workflow_call:
    inputs:
      app_version:
        required: true
        type: string
      commit_sha:
        required: true
        type: string
      base_sha:
        required: false
        type: string
      push_to_production:
        default: false
        required: false
        type: boolean
      stage:
        required: false
        type: string

jobs:
  build_and_push_image:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit_sha }}
          fetch-depth: 0
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          endpoint: builders
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=false
          tags: |
            type=schedule,pattern=nightly,enable=true,priority=1000
            type=ref,event=branch,enable=true,priority=600
            type=ref,event=tag,enable=true,priority=600
            type=raw,event=pr,value=pr-${{ github.event.number }},enable=true,priority=600
      - name: Set Commit Message Environment Variable
        id: env-commit-msg
        run: |
          MSG=$(git log --format=%B -n 1 | tr '\n' ' ') # to make it single-line
          echo "COMMIT_MSG=${MSG}" >> "$GITHUB_ENV"
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: GHA.Dockerfile
          push: true
          provenance: false
          target: ${{ inputs.stage }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ inputs.commit_sha }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.PACKAGES_GITHUB_TOKEN }}
            DOCKER_BASE=ruby:latest
            APP_VERSION=${{ inputs.app_version }}
          cache-from: |
            type=registry,ref=${{ steps.meta.outputs.tags }}
            type=registry,ref=ghcr.io/${{ github.repository }}:cache
          cache-to: type=registry,ref=${{ steps.meta.outputs.tags }},mode=max
          labels: |
            ${{ steps.meta.outputs.labels }}
            app.jane.commit.message=${{env.COMMIT_MSG}}
            app.jane.commit.user=${{github.actor}}
            app.jane.commit.branch=${{github.head_ref || github.ref_name}}
            app.jane.commit.sha=${{inputs.commit_sha}}
